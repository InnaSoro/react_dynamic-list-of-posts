{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/api.js","api/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectPost","selectedPost","className","map","post","key","id","userId","title","type","onClick","defaultProps","PropTypes","arrayOf","shape","NewCommentForm","addComment","useState","name","setName","email","setEmail","body","setBody","onSubmit","e","preventDefault","placeholder","value","onChange","event","target","BASE_URL","getUserPosts","setPosts","userID","fetch","then","response","json","result","data","filter","PostDetails","postId","setPost","comments","setComments","isVisible","setVisible","useEffect","END_POINT","getPostDetails","comment","getPostComments","length","hidden","commentId","method","current","newComment","Math","floor","Date","valueOf","JSON","stringify","App","setSelectedUsedId","setSelectedPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abd7f0fe.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, selectPost, selectedPost }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts\n        .map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            {selectedPost !== post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => selectPost(post.id)}\n                >\n                  Open\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => selectPost(0)}\n                >\n                  Close\n                </button>\n              )\n            }\n          </li>\n        ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number,\n      title: PropTypes.string,\n    }),\n  ).isRequired,\n  selectPost: PropTypes.func.isRequired,\n  selectedPost: PropTypes.number.isRequired,\n};\n\nPostsList.defaultProps = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: '',\n      userId: null,\n    })\n  )\n}\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\n\nexport const NewCommentForm = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        addComment(name, email, body);\n        setName('');\n        setEmail('');\n        setBody('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = (userId, setPosts) => {\n  const END_POINT = '/posts';\n\n  const userID = +userId;\n\n  fetch(`${BASE_URL}${END_POINT}`)\n    .then(response => response.json())\n    .then(result => setPosts(() => {\n      if (userID !== 0) {\n        return result.data.filter(post => post.userId === userID);\n      }\n\n      return result.data;\n    }));\n};\n\nexport const getPostDetails = (postId, setPost) => {\n  const END_POINT = `/posts/${postId}`;\n\n  fetch(`${BASE_URL}${END_POINT}`)\n    .then(response => response.json())\n    .then(result => setPost(result.data));\n};\n\nexport const getPostComments = (postId, setComments) => {\n  const END_POINT = '/comments';\n\n  fetch(`${BASE_URL}${END_POINT}`)\n    .then(response => response.json())\n    .then(result => setComments(\n      result.data.filter(comment => comment.postId === postId),\n    ));\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails, getPostComments } from '../../api/posts';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState('');\n  const [comments, setComments] = useState('');\n  const [isVisible, setVisible] = useState(true);\n  const deleteComment = (commentId) => {\n    fetch(`https://mate-api.herokuapp.com/comments/${commentId}`,\n      { method: 'DELETE' });\n    setComments(current => (\n      current.filter(comment => comment.id !== commentId)\n    ));\n  };\n\n  const addComment = (name, email, body) => {\n    const newComment = {\n      name,\n      email,\n      id: Math.floor(new Date().valueOf() / 1000),\n      body,\n      postId,\n    };\n\n    fetch(`https://mate-api.herokuapp.com/comments`, {\n      method: 'POST',\n      body: JSON.stringify(newComment),\n    });\n    setComments(current => [newComment, ...current]);\n  };\n\n  useEffect(() => {\n    getPostDetails(postId, setPost);\n    getPostComments(postId, setComments);\n    setVisible(true);\n  }, [postId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.title}</p>\n      </section>\n\n      {comments.length > 0\n      && (\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setVisible(!isVisible)}\n        >\n          {isVisible ? 'Hide' : 'Show'}\n          {' '}\n          {comments.length}\n          {' '}\n          comments\n        </button>\n\n        <ul className=\"PostDetails__list\" hidden={!isVisible}>\n          {comments.map(comment => (\n            <li\n              key={comment.id}\n              className=\"PostDetails__list-item\"\n            >\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => deleteComment(comment.id)}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n      )\n    }\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addComment={addComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [userId, setSelectedUsedId] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(0);\n  const selectUser = (event) => {\n    setSelectedUsedId(event.target.value);\n    getUserPosts(event.target.value, setPosts);\n  };\n\n  useEffect(() => {\n    getUserPosts(userId, setPosts);\n  }, [userId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            value={userId}\n            onChange={selectUser}\n            className=\"App__user-selector\"\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectPost={setSelectedPost}\n            selectedPost={selectedPost}\n          />\n        </div>\n\n        {selectedPost\n          && (\n          <div className=\"App__content\">\n            <PostDetails postId={selectedPost} />\n          </div>\n          )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}